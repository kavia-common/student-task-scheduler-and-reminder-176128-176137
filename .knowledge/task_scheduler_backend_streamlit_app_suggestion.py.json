{"is_source_file": true, "format": "Python", "description": "This file defines a heuristic-based suggestion system for prioritizing tasks in a task scheduler application. It includes data classes for weights, functions for calculating individual scores based on task priority, urgency, overdue status, and estimated time, as well as a main function to fetch, score, and return top task suggestions from a database.", "external_files": ["db", "settings"], "external_methods": ["db.get_cursor", "get_settings"], "published": ["get_top_suggestions"], "classes": [{"name": "SuggestionWeights", "description": "Data class holding configurable weights and thresholds for the scoring heuristics."}], "methods": [{"name": "int _safe_int(v: Any, default: int = 0)", "description": "Safely converts a value to int, with a default fallback.", "scope": "", "scopeKind": ""}, {"name": "Optional[datetime] _parse_iso(ts: Optional[str])", "description": "Parses an ISO format timestamp string into a datetime object; returns None if parsing fails.", "scope": "", "scopeKind": ""}, {"name": "float _priority_score(priority: Optional[int])", "description": "Normalizes task priority into a 0..1 scale with prescribed mappings.", "scope": "", "scopeKind": ""}, {"name": "Tuple[float,bool] _urgency_score(due_dt: Optional[datetime], window_hours: int)", "description": "Calculates an urgency score based on due date proximity and whether the task is overdue.", "scope": "", "scopeKind": ""}, {"name": "float _short_task_bonus(estimated_minutes: Optional[int], threshold_min: int)", "description": "Provides a bonus score for short tasks to encourage quick wins.", "scope": "", "scopeKind": ""}, {"name": "Tuple[float,Dict[str,Any]] _compute_score(row: Dict[str, Any], w: SuggestionWeights)", "description": "Computes total heuristic score for a task and returns score and explanation factors.", "scope": "", "scopeKind": ""}, {"name": "SuggestionWeights _load_weights_from_settings()", "description": "Loads scoring weights and thresholds from settings, with defaults.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] get_top_suggestions(limit: int = 3, for_minutes: Optional[int] = None)", "description": "Fetches tasks from the database, scores them heuristically, and returns the top suggestions based on configured limit and optional time slot.", "scope": "", "scopeKind": ""}], "calls": ["db.get_cursor", "get_settings", "_safe_int", "_parse_iso", "_priority_score", "_urgency_score", "_short_task_bonus", "_compute_score"], "search-terms": ["task suggestion heuristic", "task scoring Python", "task prioritization database", "task urgency calculation", "task scoring weights"], "state": 2, "file_id": 13, "knowledge_revision": 42, "git_revision": "", "ctags": [{"_type": "tag", "name": "SHORT_TASK_THRESHOLD_MIN", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^    SHORT_TASK_THRESHOLD_MIN: int = 30  # minutes considered short$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "SuggestionWeights", "scopeKind": "class"}, {"_type": "tag", "name": "SuggestionWeights", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^class SuggestionWeights:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "URGENCY_WINDOW_HOURS", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^    URGENCY_WINDOW_HOURS: int = 72      # consider due within 72h strongly$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "SuggestionWeights", "scopeKind": "class"}, {"_type": "tag", "name": "WEIGHT_OVERDUE_BOOST", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^    WEIGHT_OVERDUE_BOOST: float = 1.0$/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "SuggestionWeights", "scopeKind": "class"}, {"_type": "tag", "name": "WEIGHT_PRIORITY", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^    WEIGHT_PRIORITY: float = 1.0$/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "SuggestionWeights", "scopeKind": "class"}, {"_type": "tag", "name": "WEIGHT_SHORT_TASK_BIAS", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^    WEIGHT_SHORT_TASK_BIAS: float = 0.5$/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "SuggestionWeights", "scopeKind": "class"}, {"_type": "tag", "name": "WEIGHT_URGENCY", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^    WEIGHT_URGENCY: float = 1.0$/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "SuggestionWeights", "scopeKind": "class"}, {"_type": "tag", "name": "_compute_score", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _compute_score(row: Dict[str, Any], w: SuggestionWeights) -> Tuple[float, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[float,Dict[str,Any]]", "kind": "function", "signature": "(row: Dict[str, Any], w: SuggestionWeights)"}, {"_type": "tag", "name": "_load_weights_from_settings", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _load_weights_from_settings() -> SuggestionWeights:$/", "language": "Python", "typeref": "typename:SuggestionWeights", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_parse_iso", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _parse_iso(ts: Optional[str]) -> Optional[datetime]:$/", "language": "Python", "typeref": "typename:Optional[datetime]", "kind": "function", "signature": "(ts: Optional[str])"}, {"_type": "tag", "name": "_priority_score", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _priority_score(priority: Optional[int]) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(priority: Optional[int])"}, {"_type": "tag", "name": "_safe_int", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _safe_int(v: Any, default: int = 0) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(v: Any, default: int = 0)"}, {"_type": "tag", "name": "_short_task_bonus", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _short_task_bonus(estimated_minutes: Optional[int], threshold_min: int) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(estimated_minutes: Optional[int], threshold_min: int)"}, {"_type": "tag", "name": "_urgency_score", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def _urgency_score(due_dt: Optional[datetime], window_hours: int) -> Tuple[float, bool]:$/", "language": "Python", "typeref": "typename:Tuple[float,bool]", "kind": "function", "signature": "(due_dt: Optional[datetime], window_hours: int)"}, {"_type": "tag", "name": "get_top_suggestions", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/suggestion.py", "pattern": "/^def get_top_suggestions(limit: int = 3, for_minutes: Optional[int] = None) -> List[Dict[str, Any/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(limit: int = 3, for_minutes: Optional[int] = None)"}], "hash": "6bf9042e1ddab5b13f91537ccf321121", "format-version": 4, "code-base-name": "task_scheduler_backend", "filename": "task_scheduler_backend/streamlit_app/suggestion.py", "fields": [{"name": "int SHORT_TASK_THRESHOLD_MIN", "scope": "SuggestionWeights", "scopeKind": "class", "description": "unavailable"}, {"name": "int URGENCY_WINDOW_HOURS", "scope": "SuggestionWeights", "scopeKind": "class", "description": "unavailable"}, {"name": "float WEIGHT_OVERDUE_BOOST", "scope": "SuggestionWeights", "scopeKind": "class", "description": "unavailable"}, {"name": "float WEIGHT_PRIORITY", "scope": "SuggestionWeights", "scopeKind": "class", "description": "unavailable"}, {"name": "float WEIGHT_SHORT_TASK_BIAS", "scope": "SuggestionWeights", "scopeKind": "class", "description": "unavailable"}, {"name": "float WEIGHT_URGENCY", "scope": "SuggestionWeights", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"42": ""}]}