{"is_source_file": true, "format": "Python", "description": "Source file implementing database operations for task management, including schema initialization, task creation, update, deletion, and retrieval functions using SQLite with thread-local connections.", "external_files": ["settings.py"], "external_methods": ["get_settings"], "published": ["create_task", "update_task", "delete_task", "get_task", "list_tasks", "list_categories", "count_open_tasks", "count_due_today", "count_pomodoro_today", "get_due_unsent_reminders", "mark_reminder_sent"], "classes": [], "methods": [{"name": "str get_db_path()", "description": "Returns the database file path, creating the data directory if necessary.", "scope": "", "scopeKind": ""}, {"name": "sqlite3.Connection _get_connection()", "description": "Retrieves or creates a thread-local SQLite connection, enabling check_same_thread=False and foreign keys.", "scope": "", "scopeKind": ""}, {"name": "Generator[sqlite3.Cursor,None,None] get_cursor()", "description": "Context manager yielding a cursor from the thread-local connection.", "scope": "", "scopeKind": ""}, {"name": "None init_db()", "description": "Initializes the database schema once per process, creating tables and indexes.", "scope": "", "scopeKind": ""}, {"name": "Optional[int] _get_or_create_category(cur: sqlite3.Cursor, name: Optional[str])", "description": "Inserts a new category if it doesn't exist and returns its ID.", "scope": "", "scopeKind": ""}, {"name": "None _upsert_initial_reminder(cur: sqlite3.Cursor, task_id: int, due_iso: Optional[str])", "description": "Creates or updates a reminder for a task's due date.", "scope": "", "scopeKind": ""}, {"name": "int create_task( title: str, description: str = \"\", category_name: Optional[str] = None, priority: int = 2, estimated_minutes: int = 0, due_datetime: Optional[str] = None, status: str = \"open\", recurrence: str = \"none\", recurrence_end_date: Optional[str] = None, )", "description": "Creates a new task with specified attributes and an initial reminder.", "scope": "", "scopeKind": ""}, {"name": "None update_task( task_id: int, title: str, description: str, category_name: Optional[str], priority: int, estimated_minutes: int, due_datetime: Optional[str], status: str, recurrence: str, recurrence_end_date: Optional[str], )", "description": "Updates existing task attributes and associated reminder.", "scope": "", "scopeKind": ""}, {"name": "None delete_task(task_id: int)", "description": "Deletes a task, cascading deletions to reminders.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_task(task_id: int)", "description": "Fetches a task by ID, including its category name.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] list_tasks( limit: int = 200, status: Optional[str] = None, category: Optional[str] = None, priority_min: Optional[int] = None, priority_max: Optional[int] = None, date_range: Optional[Tuple[str, str]] = None, search: Optional[str] = None, )", "description": "Returns a list of tasks filtered by various criteria and search term.", "scope": "", "scopeKind": ""}, {"name": "List[str] list_categories()", "description": "Retrieves all category names.", "scope": "", "scopeKind": ""}, {"name": "int count_open_tasks()", "description": "Counts tasks that are not marked as completed.", "scope": "", "scopeKind": ""}, {"name": "int count_due_today()", "description": "Counts tasks due on the current day.", "scope": "", "scopeKind": ""}, {"name": "int count_pomodoro_today()", "description": "Counts pomodoro sessions started today.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] get_due_unsent_reminders(now_iso: str)", "description": "Retrieves unsent reminders due at or before the specified current time.", "scope": "", "scopeKind": ""}, {"name": "None mark_reminder_sent(reminder_id: int)", "description": "Marks a reminder as sent.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "os.makedirs", "datetime.fromisoformat", "sqlite3.connect", "cur.execute", "cur.fetchone", "cur.fetchall", "cur.lastrowid", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute", "cur.execute"], "search-terms": ["task", "database", "sqlite", "thread-local", "schema", "reminder", "category", "init_db", "create_task", "get_task", "list_tasks", "update_task", "delete_task"], "state": 2, "file_id": 6, "knowledge_revision": 28, "git_revision": "ba4a713186061856c5a4d88414666dd1bbc3d686", "revision_history": [{"13": ""}, {"24": "ba4a713186061856c5a4d88414666dd1bbc3d686"}, {"26": "ba4a713186061856c5a4d88414666dd1bbc3d686"}, {"27": "ba4a713186061856c5a4d88414666dd1bbc3d686"}, {"28": "ba4a713186061856c5a4d88414666dd1bbc3d686"}], "ctags": [{"_type": "tag", "name": "_db_initialized", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^_db_initialized = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_get_connection", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def _get_connection() -> sqlite3.Connection:$/", "language": "Python", "typeref": "typename:sqlite3.Connection", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_get_or_create_category", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def _get_or_create_category(cur: sqlite3.Cursor, name: Optional[str]) -> Optional[int]:$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "function", "signature": "(cur: sqlite3.Cursor, name: Optional[str])"}, {"_type": "tag", "name": "_init_lock", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^_init_lock = threading.Lock()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_thread_local", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^_thread_local = threading.local()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_upsert_initial_reminder", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def _upsert_initial_reminder(cur: sqlite3.Cursor, task_id: int, due_iso: Optional[str]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(cur: sqlite3.Cursor, task_id: int, due_iso: Optional[str])"}, {"_type": "tag", "name": "count_due_today", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def count_due_today() -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "count_open_tasks", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def count_open_tasks() -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "count_pomodoro_today", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def count_pomodoro_today() -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "create_task", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def create_task($/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "( title: str, description: str = \"\", category_name: Optional[str] = None, priority: int = 2, estimated_minutes: int = 0, due_datetime: Optional[str] = None, status: str = \"open\", recurrence: str = \"none\", recurrence_end_date: Optional[str] = None, )"}, {"_type": "tag", "name": "delete_task", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def delete_task(task_id: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "get_cursor", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def get_cursor() -> Generator[sqlite3.Cursor, None, None]:$/", "language": "Python", "typeref": "typename:Generator[sqlite3.Cursor,None,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db_path", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def get_db_path() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_due_unsent_reminders", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def get_due_unsent_reminders(now_iso: str) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(now_iso: str)"}, {"_type": "tag", "name": "get_task", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def get_task(task_id: int) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(task_id: int)"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def init_db() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_categories", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def list_categories() -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_tasks", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def list_tasks($/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "( limit: int = 200, status: Optional[str] = None, category: Optional[str] = None, priority_min: Optional[int] = None, priority_max: Optional[int] = None, date_range: Optional[Tuple[str, str]] = None, search: Optional[str] = None, )"}, {"_type": "tag", "name": "mark_reminder_sent", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def mark_reminder_sent(reminder_id: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(reminder_id: int)"}, {"_type": "tag", "name": "update_task", "path": "/home/kavia/workspace/code-generation/student-task-scheduler-and-reminder-176128-176137/task_scheduler_backend/streamlit_app/db.py", "pattern": "/^def update_task($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( task_id: int, title: str, description: str, category_name: Optional[str], priority: int, estimated_minutes: int, due_datetime: Optional[str], status: str, recurrence: str, recurrence_end_date: Optional[str], )"}], "hash": "9606e4ead4acd7fb4d27edc6ff456bcc", "format-version": 4, "code-base-name": "task_scheduler_backend", "filename": "task_scheduler_backend/streamlit_app/db.py", "fields": [{"name": "_db_initialized = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_init_lock = threading.Lock()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_thread_local = threading.local()", "scope": "", "scopeKind": "", "description": "unavailable"}]}